using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class RangerAttack : MonoBehaviour
{

    [SerializeField] private float range = 3f;
    [SerializeField] private float timeBetweenAttack = 1f;  //Attack speed control
    [SerializeField] Transform fireLocation;


    private Animator anim;
    private GameObject player;
    private bool playerInRange;     //to keep track whether we are within the range
    private EnemyHealth enemyHealth;
    private GameObject arrow;
    


    // Use this for initialization
    void Start()
    {

        player = GameManager.instance.Player;
        anim = GetComponent<Animator>();
        StartCoroutine(attack());
        enemyHealth = GetComponent<EnemyHealth>();
        arrow = GameManager.instance.Arrow;

    }

    // Update is called once per frame
    void Update()
    {

        if (Vector3.Distance(transform.position, player.transform.position) < range && enemyHealth.IsAlive)
        {
            playerInRange = true;
            anim.SetBool("PlayerInRange", true);
            RotateTowards (player.transform);
            

        }
        else
        {
            playerInRange = false;
            anim.SetBool("PlayerInRange", false);
        }

        //print(playerInRange);    // <-- to check our range
    }



    // Let coroutine wait for few second
    IEnumerator attack()
    {
        if (playerInRange && !GameManager.instance.GameOver && enemyHealth.IsAlive)
        {
            anim.Play("Attack");
            yield return new WaitForSeconds(timeBetweenAttack);
            
        }

        yield return null;
        StartCoroutine(attack());
        
    }


    public void EnemyBeginAttack()
    {
        FireArrow();
    }


    private void RotateTowards(Transform player)
    {
        Vector3 direction = (player.position - transform.position).normalized;
        Quaternion lookRotation = Quaternion.LookRotation(direction);
        transform.rotation = Quaternion.Slerp(transform.rotation, lookRotation, Time.deltaTime * 10f);

    }

    public void FireArrow()
    {
        GameObject newArrow = Instantiate(arrow) as GameObject;
        newArrow.transform.position = fireLocation.position;
        newArrow.transform.rotation = transform.rotation;
        newArrow.GetComponent<Rigidbody>().velocity = transform.forward * 25f;

    }
    

}
